import sys
import os
import time

import gammalib
import ctools

#from ConfigHandler import ConfigHandler
from Utilities import *

"""
Do ctools analysis
Parameters:
-----------
configuration file
"""

### config file
if len(sys.argv) <2:
    print('param: configuration file')
    sys.exit()

configfile = sys.argv[1]
print sys.argv[1]

### open configuration file
try:
    cfg = ConfigHandler(configfile)
except:
    print('File not found: {0}'.format(configfile))
    sys.exit()

tstart = time.clock()

#########################
### create model file ###
#########################
tstartmodel = time.clock()
try:
    info('Generating xml file model...')
    #dealWithModelFile(cfg)
except:
    warning('Problem ==> EXIT!')
    sys.exit()
tstopmodel = time.clock()
print('==> OK (done in {0} s)'.format(tstopmodel-tstartmodel))

############################################
### handle data (skip this step for now) ###
############################################
tstartdata = time.clock()
try:
    info('Handling data...')
    handleData(cfg)
except:
    pass
tstopdata = time.clock()
print('==> OK (done in {0} s)'.format(tstopdata-tstartdata))

###################
### select data ###
###################
tstartselect = time.clock()
#try:
info('Selecting data...')
selectData(cfg)
#except:
 #   warning('Problem ==> EXIT!')
  #  sys.exit()
tstopselect = time.clock()
print('==> OK (done in {0} s)'.format(tstopselect-tstartselect))

################
### bin data ###
################
tstartbin = time.clock()
try:
    info('Binning data...')
    binData(cfg)
except:
    warning('Problem ==> EXIT!')
    sys.exit()
tstopbin = time.clock()
print('==> OK (done in {0} s)'.format(tstopbin-tstartbin))

#########################################
### make cubes(exposure, psf and bkg) ###
#########################################
tstartcubes = time.clock()
try:
    info('Generating exposure, psf and bkg cubes...')
    makeCubes(cfg)
except:
    warning('Problem ==> EXIT!')
    sys.exit()
tstopcubes = time.clock()
print('==> OK (done in {0} s)'.format(tstopcubes-tstartcubes))

################
### make fit ###
################
tstartfit = time.clock()
try:
    info('Minimizing...')
    makeFit(cfg)
except:
    warning('Problem ==> EXIT!')
    sys.exit()
tstopfit = time.clock()
print('==> OK (done in {0} s)'.format(tstopfit-tstartfit))


# ############################
# ### make spectral points ###
# ############################
# tstartspec = time.clock()
# try:
#     info('Generating spectral points...')
#     makeSpectralPoints(cfg)
# except:
#     warning('Problem ==> EXIT!')
#     sys.exit()
# tstopspec = time.clock()
# print('==> OK (done in {0} s)'.format(tstopspec-tstartspec))

# ######################
# ### make butterfly ###
# ######################
# tstartspec = time.clock()
# try:
#     info('Generating butterfly...')
#     makeSpectralPoints(cfg)
# except:
#     warning('Problem ==> EXIT!')
#     sys.exit()
# tstopspec = time.clock()
# print('==> OK (done in {0} s)'.format(tstopspec-tstartspec))


#####################
### make spectrum ###
#####################

showSpectrum(cfg)

tend = time.clock()
print('\nJob done in {0} s'.format(tend-tstart))
